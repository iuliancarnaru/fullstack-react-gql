{"ast":null,"code":"var _jsxFileName = \"/Users/iulian.carnaru/Desktop/fullstack-react-gql/web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Wrapper from \"../../components/Wrapper\";\nimport { Formik, Form } from \"formik\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport InputFiled from \"../../components/InputField\";\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { useChangePasswordMutation } from \"../../generated/graphql\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\n\nconst ChangePassword = ({\n  token\n}) => {\n  const router = useRouter();\n  const [, changePassword] = useChangePasswordMutation();\n  const {\n    0: tokenError,\n    1: setTokenError\n  } = useState(\"\");\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await changePassword({\n        newPassword: values.newPassword,\n        token\n      });\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n        const errorMap = toErrorMap(response.data.changePassword.errors);\n\n        if (\"token\" in errorMap) {\n          setTokenError(errorMap.token);\n        }\n\n        setErrors(errorMap);\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(InputFiled, {\n    name: \"newPassword\",\n    placeholder: \"new password\",\n    label: \"New password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), tokenError && __jsx(Box, {\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 28\n    }\n  }, tokenError), __jsx(Button, {\n    mt: 4,\n    isLoading: isSubmitting,\n    type: \"submit\",\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Change password\"))));\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: false\n})(ChangePassword);","map":{"version":3,"sources":["/Users/iulian.carnaru/Desktop/fullstack-react-gql/web/src/pages/change-password/[token].tsx"],"names":["React","useState","Wrapper","Formik","Form","toErrorMap","InputFiled","Box","Button","useChangePasswordMutation","useRouter","withUrqlClient","createUrqlClient","ChangePassword","token","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","response","data","errors","errorMap","user","push","isSubmitting","getInitialProps","query","ssr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NextPage } from \"next\";\nimport Wrapper from \"../../components/Wrapper\";\nimport { Formik, Form } from \"formik\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport InputFiled from \"../../components/InputField\";\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { useChangePasswordMutation } from \"../../generated/graphql\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const router = useRouter();\n  const [, changePassword] = useChangePasswordMutation();\n  const [tokenError, setTokenError] = useState(\"\");\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await changePassword({\n            newPassword: values.newPassword,\n            token,\n          });\n          if (response.data?.changePassword.errors) {\n            const errorMap = toErrorMap(response.data.changePassword.errors);\n            if (\"token\" in errorMap) {\n              setTokenError(errorMap.token);\n            }\n            setErrors(errorMap);\n          } else if (response.data?.changePassword.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputFiled\n              name=\"newPassword\"\n              placeholder=\"new password\"\n              label=\"New password\"\n              type=\"password\"\n            />\n            {tokenError && <Box color=\"red\">{tokenError}</Box>}\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              variantColor=\"teal\"\n            >\n              Change password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: false })(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}
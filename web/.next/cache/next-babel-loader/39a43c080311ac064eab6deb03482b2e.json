{"ast":null,"code":"var _jsxFileName = \"/Users/iulian.carnaru/Desktop/fullstack-react-gql/web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nconst ChangePassword = ({\n  token\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: \"\",\n      password: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(InputFiled, {\n    name: \"usernameOrEmail\",\n    placeholder: \"username or email\",\n    label: \"Username Or Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, __jsx(InputFiled, {\n    name: \"password\",\n    placeholder: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    mt: 4,\n    isLoading: isSubmitting,\n    type: \"submit\",\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Login\")))));\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/iulian.carnaru/Desktop/fullstack-react-gql/web/src/pages/change-password/[token].tsx"],"names":["React","ChangePassword","token","usernameOrEmail","password","values","setErrors","response","login","data","errors","toErrorMap","user","router","push","isSubmitting","getInitialProps","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,cAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,eAAe,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,MAAD,CAA5B;;AACA,4BAAIE,QAAQ,CAACE,IAAb,mDAAI,eAAeD,KAAf,CAAqBE,MAAzB,EAAiC;AAC/BJ,QAAAA,SAAS,CAACK,UAAU,CAACJ,QAAQ,CAACE,IAAT,CAAcD,KAAd,CAAoBE,MAArB,CAAX,CAAT;AACD,OAFD,MAEO,uBAAIH,QAAQ,CAACE,IAAb,oDAAI,gBAAeD,KAAf,CAAqBI,IAAzB,EAA+B;AACpCC,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAC,mBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAcE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,SAAS,EAAEA,YAFb;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,CAZJ,CADF,CADF,CADF;AA2CD,CA5CD;;AA8CAd,cAAc,CAACe,eAAf,GAAiC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9C,SAAO;AACLf,IAAAA,KAAK,EAAEe,KAAK,CAACf;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  return (\n    <div>\n      <Wrapper variant=\"small\">\n        <Formik\n          initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n          onSubmit={async (values, { setErrors }) => {\n            const response = await login(values);\n            if (response.data?.login.errors) {\n              setErrors(toErrorMap(response.data.login.errors));\n            } else if (response.data?.login.user) {\n              router.push(\"/\");\n            }\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <InputFiled\n                name=\"usernameOrEmail\"\n                placeholder=\"username or email\"\n                label=\"Username Or Email\"\n              />\n              <Box mt={4}>\n                <InputFiled\n                  name=\"password\"\n                  placeholder=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                />\n              </Box>\n              <Button\n                mt={4}\n                isLoading={isSubmitting}\n                type=\"submit\"\n                variantColor=\"teal\"\n              >\n                Login\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrapper>\n    </div>\n  );\n};\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}
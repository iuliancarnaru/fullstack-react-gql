{"ast":null,"code":"var _jsxFileName = \"/Users/iulian.carnaru/Desktop/fullstack-react-gql/web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Wrapper from \"../../components/Wrapper\";\nimport { Formik, Form } from \"formik\";\nimport login from \"../login\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport InputFiled from \"../../components/InputField\";\nimport { Button } from \"@chakra-ui/core\";\n\nconst ChangePassword = ({\n  token\n}) => {\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(InputFiled, {\n    name: \"newPassword\",\n    placeholder: \"new password\",\n    label: \"New password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    mt: 4,\n    isLoading: isSubmitting,\n    type: \"submit\",\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Login\"))));\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/iulian.carnaru/Desktop/fullstack-react-gql/web/src/pages/change-password/[token].tsx"],"names":["React","Wrapper","Formik","Form","login","toErrorMap","InputFiled","Button","ChangePassword","token","newPassword","values","setErrors","response","data","errors","user","router","push","isSubmitting","getInitialProps","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAAcC,MAAd,QAA4B,iBAA5B;;AAEA,MAAMC,cAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjE,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA;AAAF,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzC,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACO,MAAD,CAA5B;;AACA,4BAAIE,QAAQ,CAACC,IAAb,mDAAI,eAAeV,KAAf,CAAqBW,MAAzB,EAAiC;AAC/BH,QAAAA,SAAS,CAACP,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcV,KAAd,CAAoBW,MAArB,CAAX,CAAT;AACD,OAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeV,KAAf,CAAqBY,IAAzB,EAA+B;AACpCC,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,SAAS,EAAEA,YAFb;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CAZJ,CADF,CADF;AAiCD,CAlCD;;AAoCAX,cAAc,CAACY,eAAf,GAAiC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9C,SAAO;AACLZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport Wrapper from \"../../components/Wrapper\";\nimport { Formik, Form } from \"formik\";\nimport login from \"../login\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport InputFiled from \"../../components/InputField\";\nimport { Box, Button } from \"@chakra-ui/core\";\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputFiled\n              name=\"newPassword\"\n              placeholder=\"new password\"\n              label=\"New password\"\n            />\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              variantColor=\"teal\"\n            >\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}
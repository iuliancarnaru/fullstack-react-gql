{"ast":null,"code":"var _jsxFileName = \"/Users/iulian.carnaru/Desktop/lireddit/web/src/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ThemeProvider, CSSReset, ColorModeProvider } from \"@chakra-ui/core\";\nimport { createClient, Provider } from \"urql\";\nconst client = createClient({\n  url: \"https://0ufyz.sse.codesandbox.io\"\n});\nimport theme from \"../theme\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(Provider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(ColorModeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/iulian.carnaru/Desktop/lireddit/web/src/pages/_app.tsx"],"names":["ThemeProvider","CSSReset","ColorModeProvider","createClient","Provider","client","url","theme","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,iBAAlC,QAA2D,iBAA3D;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AAEA,MAAMC,MAAM,GAAGF,YAAY,CAAC;AAAEG,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA3B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADF,CADF;AAUD;;AAED,eAAeF,KAAf","sourcesContent":["import { ThemeProvider, CSSReset, ColorModeProvider } from \"@chakra-ui/core\";\nimport { createClient, Provider } from \"urql\";\n\nconst client = createClient({ url: \"https://0ufyz.sse.codesandbox.io\" });\n\nimport theme from \"../theme\";\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <Provider value={client}>\n      <ThemeProvider theme={theme}>\n        <ColorModeProvider>\n          <CSSReset />\n          <Component {...pageProps} />\n        </ColorModeProvider>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}